<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <http auto-config="false" create-session="always" entry-point-ref="restAuthenticationEntryPoint">

        <!-- The tag <form-login > will also add a FORM_LOGIN_FILTER  -->
        <!-- So do NOT use it combined with a <custom-filter > that has a position in FORM_LOGIN_FILTER -->
        <!-- and MAKE SURE the auto-config is false -->
        <!--<form-login login-processing-url="/v1/user/session"-->
        <!--authentication-success-handler-ref="mySuccessHandle"-->
        <!--authentication-failure-handler-ref="myFailureHandle"/>-->

        <session-management session-fixation-protection="migrateSession">
            <concurrency-control max-sessions="1" session-registry-ref="sessionRegistry"/>
        </session-management>

        <remember-me services-ref="rememberMeServices"/>

        <custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <custom-filter ref="myAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
        <custom-filter ref="myLogoutFilter" position="LOGOUT_FILTER"/>

        <csrf disabled="true"/>

        <!-- CORS support -->
        <!-- https://docs.spring.io/spring-security/site/docs/current/reference/html/cors.html -->
        <cors configuration-source-ref="corsSource"/>

    </http>

    <!-- securityFilter before FILTER_SECURITY_INTERCEPTOR -->
    <beans:bean id="securityFilter" class="cn.opencil.security.SecurityFilter">
        <!-- all of the permissions that user has -->
        <beans:property name="authenticationManager" ref="myAuthenticationManager"/>
        <!-- check if the user has permissions to access this resource -->
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager"/>
        <!-- define the relationship between resources & permissions -->
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource"/>
    </beans:bean>

    <beans:bean id="myAccessDecisionManager" class="cn.opencil.security.MyAccessDecisionManager"/>
    <beans:bean id="mySecurityMetadataSource" class="cn.opencil.security.MySecurityMetadataSource"/>

    <!-- myAuthenticationFilter in position FORM_LOGIN_FILTER -->
    <beans:bean id="myAuthenticationFilter" class="cn.opencil.security.MyAuthenticationFilter">
        <beans:property name="authenticationManager" ref="myAuthenticationManager"/>
        <beans:property name="filterProcessesUrl" value="/v1/user/session/"/>
        <beans:property name="authenticationSuccessHandler" ref="mySuccessHandle"/>
        <beans:property name="authenticationFailureHandler" ref="myFailureHandle"/>
    </beans:bean>

    <beans:bean id="restAuthenticationEntryPoint" class="cn.opencil.security.MyAuthenticationEntryPoint"/>
    <beans:bean id="mySuccessHandle" class="cn.opencil.security.MyAuthenticationSuccessHandle"/>
    <beans:bean id="myFailureHandle" class="cn.opencil.security.MyAuthenticationFailureHandle"/>

    <!-- Authentication Manager -->
    <authentication-manager alias="myAuthenticationManager">
        <!-- access control -->
        <!--<authentication-provider user-service-ref="myRBACUserService">-->
        <!--<password-encoder ref="bCryptEncoder"/>-->
        <!--</authentication-provider>-->
        <authentication-provider ref="authenticationProvider"/>
    </authentication-manager>

    <!-- Authentication Provider -->
    <beans:bean id="authenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="hideUserNotFoundExceptions" value="false"/>
        <beans:property name="userDetailsService" ref="myRBACUserService"/>
        <beans:property name="passwordEncoder" ref="bCryptEncoder"/>
    </beans:bean>

    <beans:bean id="myRBACUserService" class="cn.opencil.service.implementation.MyRBACUserService"/>

    <!-- Log out filter -->
    <beans:bean id="myLogoutFilter" class="cn.opencil.security.MyLogoutFilter">
        <beans:constructor-arg name="logoutSuccessHandler" ref="logoutSuccessHandler"/>
        <beans:constructor-arg name="handlers">
            <beans:list>
                <beans:ref bean="securityContextLogoutHandler"/>
            </beans:list>
        </beans:constructor-arg>
        <beans:property name="filterProcessesUrl" value="/v1/user/session/"/>
        <beans:property name="method" value="DELETE"/>
    </beans:bean>

    <beans:bean id="securityContextLogoutHandler"
                class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
    <beans:bean id="logoutSuccessHandler"
                class="cn.opencil.security.MyLogoutSuccessHandle">
        <beans:property name="httpStatusToReturn" value="NO_CONTENT"/>
        <beans:property name="messageReturning" value="false"/>
    </beans:bean>

    <!-- Spring Session -->
    <beans:bean id="rememberMeServices"
                class="org.springframework.session.security.web.authentication.SpringSessionRememberMeServices"/>

    <beans:bean id="sessionRegistry"
                class="org.springframework.session.security.SpringSessionBackedSessionRegistry">
        <beans:constructor-arg ref="sessionRepository"/>
    </beans:bean>


    <!-- BCrypt password encoder -->
    <beans:bean id="bCryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="11"/>
    </beans:bean>

    <!-- CORS configurations -->
    <beans:bean id="corsSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
        <beans:property name="corsConfigurations">
            <beans:map>
                <beans:entry key="/**" value-ref="corsConfiguration"/>
            </beans:map>
        </beans:property>
    </beans:bean>

    <beans:bean id="corsConfiguration" class="org.springframework.web.cors.CorsConfiguration">
        <beans:property name="allowedMethods">
            <beans:list>
                <beans:value>*</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="allowedHeaders">
            <beans:list>
                <beans:value>*</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="allowedOrigins">
            <beans:list>
                <beans:value>*</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="allowCredentials" value="true"/>
    </beans:bean>

</beans:beans>